apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    com.xebialabs.service: store-app
  name: store-app
spec:
  replicas: 1
  selector:
    com.xebialabs.service: store-app
  strategy:
    resources: {}
  template:
    metadata:
      labels:
        com.xebialabs.service: store-app
    spec:
      initContainers:
        - name: init-ds
          image: busybox
          command:
            - '/bin/sh'
            - '-c'
            - |
                while true
                do
                  rt=$(nc -z -w 1 store-mysql 3306)
                  if [ $? -eq 0 ]; then
                    echo "DB is UP"
                    break
                  fi
                  echo "DB is not yet reachable;sleep for 10s before retry"
                  sleep 10
                done
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod,swagger"
        - name: SPRING_CLOUD_CONFIG_URI
          value: http://admin:admin@jhipster-registry:8761/config
        - name: JHIPSTER_REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: jhipster-registry-secret
              key: registry-admin-password
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          value: http://admin:admin@jhipster-registry:8761/eureka/
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://store-mysql:3306/store?useUnicode=true&characterEncoding=utf8&useSSL=false&user=store_user&password=changeit
        - name: JHIPSTER_METRICS_LOGS_ENABLED
          value: 'true'
        - name: JHIPSTER_LOGGING_LOGSTASH_ENABLED
          value: 'true'
        - name: JHIPSTER_LOGGING_LOGSTASH_HOST
          value: jhipster-logstash
        - name: SPRING_ZIPKIN_ENABLED
          value: "true"
        - name: SPRING_ZIPKIN_BASE_URL
          value: http://jhipster-zipkin
        - name: SPRING_SLEUTH_PROPAGATION_KEYS
          value: "x-request-id,x-ot-span-context"
        - name: JAVA_OPTS
          value: " -Xmx256m -Xms256m"
        image: ' '
        name: store-app
        ports:
        - containerPort: 8080
        resources: {}
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - store-app
      from:
        kind: ImageStreamTag
        name: store-app:latest
    type: ImageChange